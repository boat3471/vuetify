{"version":3,"sources":["../../src/zui/ZMessage.ts"],"names":[],"mappings":";;;;;;;AACA;;;;;;;;;;;;;;;;AAGA,IAAI,QAAJ;AACA;;;;IAGa,a;;;AA8IX,2BAAA;AAAA;;AACE,QAAI,CAAC,QAAL,EAAe;AACb,MAAA,QAAQ,GAAG,IAAX;AACD;;AACD,WAAO,QAAP;AACD;;;;;AAnID;;;;yBAIM,O,EAAqC;AACzC,UAAI,OAAO,GAAG,EAAd;;AACA,UAAI,QAAO,OAAP,MAAmB,QAAvB,EAAiC;AAC/B,QAAA,OAAO,GAAG,OAAO,GAAG,EAApB;AACA,QAAA,OAAO,GAAG;AACR,UAAA,IAAI,EAAE,MADE;AAER,UAAA,OAAO,EAAE,OAFD;AAGR,UAAA,IAAI,EAAE;AAHE,SAAV;AAKD,OAPD,MAOO;AACL,QAAA,OAAO,GAAG,OAAO,CAAC,OAAR,IAAmB,EAA7B;AACD;;AAED,cAAQ,OAAO,CAAC,IAAhB;AACE,aAAK,MAAL;AACE,iBAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,OAAnB,CAAP;;AACF,aAAK,SAAL;AACE,iBAAO,KAAK,OAAL,CAAa,OAAb,EAAsB,OAAtB,CAAP;;AACF,aAAK,MAAL;AACA,aAAK,SAAL;AACE,iBAAO,KAAK,OAAL,CAAa,OAAb,EAAsB,OAAtB,CAAP;;AACF,aAAK,OAAL;AACE,iBAAO,KAAK,KAAL,CAAW,OAAX,EAAoB,OAApB,CAAP;;AACF;AACE;AAXJ;AAaD;AAED;;;;;;;;yBAKM,O,EAAiB,O,EAAyB;AAC9C,UAAM,SAAS,GAAG,aAAa,CAAC,UAAd,EAAlB;AACA,UAAM,IAAI,GAAG,IAAI,wBAAJ,CAAmB;AAC9B,QAAA,SAAS,oBACJ,OADI;AAEP,UAAA,OAAO,EAAE,OAAO,IAAI,EAFb;AAGP,UAAA,IAAI,EAAE,MAHC;AAIP,UAAA,IAAI,EAAE;AAJC,UADqB;AAO9B,QAAA,MAAM,EAAE;AAPsB,OAAnB,EAQV,MARU,EAAb;AASA,MAAA,SAAS,IAAI,SAAS,CAAC,GAAV,CAAc,WAAd,CAA0B,IAAI,CAAC,GAA/B,CAAb;AACD;AAED;;;;;;;;4BAKS,O,EAAiB,O,EAAyB;AACjD,UAAM,SAAS,GAAG,aAAa,CAAC,UAAd,EAAlB;AACA,UAAM,IAAI,GAAG,IAAI,wBAAJ,CAAmB;AAC9B,QAAA,SAAS,oBACJ,OADI;AAEP,UAAA,OAAO,EAAE,OAAO,IAAI,EAFb;AAGP,UAAA,IAAI,EAAE,SAHC;AAIP,UAAA,IAAI,EAAE;AAJC,UADqB;AAO9B,QAAA,MAAM,EAAE;AAPsB,OAAnB,EAQV,MARU,EAAb;AASA,MAAA,SAAS,IAAI,SAAS,CAAC,GAAV,CAAc,WAAd,CAA0B,IAAI,CAAC,GAA/B,CAAb;AACD;AAED;;;;;;;;yBAKM,O,EAAiB,O,EAAyB;AAC9C,aAAO,KAAK,OAAL,CAAa,OAAb,EAAsB,OAAtB,CAAP;AACD;AAED;;;;;;;;4BAKS,O,EAAiB,O,EAAyB;AACjD,UAAM,SAAS,GAAG,aAAa,CAAC,UAAd,EAAlB;AACA,UAAM,IAAI,GAAG,IAAI,wBAAJ,CAAmB;AAC9B,QAAA,SAAS,oBACJ,OADI;AAEP,UAAA,OAAO,EAAE,OAAO,IAAI,EAFb;AAGP,UAAA,IAAI,EAAE,SAHC;AAIP,UAAA,IAAI,EAAE;AAJC,UADqB;AAO9B,QAAA,MAAM,EAAE;AAPsB,OAAnB,EAQV,MARU,EAAb;AASA,MAAA,SAAS,IAAI,SAAS,CAAC,GAAV,CAAc,WAAd,CAA0B,IAAI,CAAC,GAA/B,CAAb;AACD;AAED;;;;;;;;0BAKO,O,EAAiB,O,EAAyB;AAC/C,UAAM,SAAS,GAAG,aAAa,CAAC,UAAd,EAAlB;AACA,UAAM,IAAI,GAAG,IAAI,wBAAJ,CAAmB;AAC9B,QAAA,SAAS,oBACJ,OADI;AAEP,UAAA,OAAO,EAAE,OAAO,IAAI,EAFb;AAGP,UAAA,IAAI,EAAE,OAHC;AAIP,UAAA,IAAI,EAAE;AAJC,UADqB;AAO9B,QAAA,MAAM,EAAE;AAPsB,OAAnB,EAQV,MARU,EAAb;AASA,MAAA,SAAS,IAAI,SAAS,CAAC,GAAV,CAAc,WAAd,CAA0B,IAAI,CAAC,GAA/B,CAAb;AACD;;;qCAEa;AACZ,UAAI,IAAI,GAAG,aAAa,CAAC,YAAzB;;AACA,UAAI,CAAC,IAAL,EAAW;AACT,QAAA,IAAI,GAAG,EAAP;AACA,QAAA,aAAa,CAAC,YAAd,GAA6B,IAA7B;AACD;;AACD,aAAO,IAAP;AACD;;;iCAvIgB;AACf,UAAI,CAAC,aAAa,CAAC,SAAnB,EAA8B;AAC5B,YAAM,GAAG,GAAG,QAAQ,CAAC,cAAT,CAAwB,aAAa,CAAC,KAAtC,CAAZ;AACA,YAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;AACA,QAAA,GAAG,IAAI,GAAG,CAAC,WAAJ,CAAgB,GAAhB,CAAP;AACA,QAAA,aAAa,CAAC,SAAd,GAA0B,IAAI,2BAAJ,CAAsB,EAAtB,EACvB,MADuB,CAChB,GADgB,CAA1B;AAED;;AACD,aAAO,aAAa,CAAC,SAArB;AACD;;;kCAyIiB;AAChB,UAAI,CAAC,QAAL,EAAe;AACb,QAAA,QAAQ,GAAG,IAAI,aAAJ,EAAX;AACD;;AACD,aAAO,QAAP;AACD;;;;;;;AAzJM,aAAA,CAAA,YAAA,GAA+B,EAA/B;AAkJA,aAAA,CAAA,KAAA,GAAQ,KAAR;AAUT;;;;;;AAKO,IAAM,QAAQ,GAAG,aAAa,CAAC,WAAd,EAAjB","sourcesContent":["import Vue from 'vue'\nimport { ZMessageSingle, ZMessageContainer } from './components/ZMessage'\nimport { ZMessageOptions, ZMessageShowOptions, ZMessageItem, ZMessageDescription } from '../../types'\n\nlet instance: ZMessageClass\n/**\n * 消息管理器\n */\nexport class ZMessageClass implements ZMessageDescription {\n  static __wrapper: Vue\n\n  static MESSAGE_LIST: ZMessageItem[] = []\n\n  static genWrapper () {\n    if (!ZMessageClass.__wrapper) {\n      const app = document.getElementById(ZMessageClass.appId)\n      const div = document.createElement('div')\n      app && app.appendChild(div)\n      ZMessageClass.__wrapper = new ZMessageContainer({\n      }).$mount(div)\n    }\n    return ZMessageClass.__wrapper\n  }\n\n  /**\n   * 显示消息\n   * @param options\n   */\n  show (options: ZMessageShowOptions | string) {\n    let content = ''\n    if (typeof options !== 'object') {\n      content = options + ''\n      options = {\n        type: 'info',\n        message: content,\n        icon: 'mdi-information',\n      }\n    } else {\n      content = options.message || ''\n    }\n\n    switch (options.type) {\n      case 'info':\n        return this.info(content, options)\n      case 'success':\n        return this.success(content, options)\n      case 'warn':\n      case 'warning':\n        return this.warning(content, options)\n      case 'error':\n        return this.error(content, options)\n      default:\n        break\n    }\n  }\n\n  /**\n   * 常规消息\n   * @param message\n   * @param options\n   */\n  info (message: string, options?: ZMessageOptions) {\n    const container = ZMessageClass.genWrapper()\n    const comp = new ZMessageSingle({\n      propsData: {\n        ...options,\n        message: message || '',\n        type: 'info',\n        icon: 'mdi-information',\n      },\n      parent: container,\n    }).$mount()\n    container && container.$el.appendChild(comp.$el)\n  }\n\n  /**\n   * 成功消息\n   * @param message\n   * @param options\n   */\n  success (message: string, options?: ZMessageOptions) {\n    const container = ZMessageClass.genWrapper()\n    const comp = new ZMessageSingle({\n      propsData: {\n        ...options,\n        message: message || '',\n        type: 'success',\n        icon: 'mdi-check-circle',\n      },\n      parent: container,\n    }).$mount()\n    container && container.$el.appendChild(comp.$el)\n  }\n\n  /**\n   * 告警消息\n   * @param message\n   * @param options\n   */\n  warn (message: string, options?: ZMessageOptions) {\n    return this.warning(message, options)\n  }\n\n  /**\n   * 告警消息\n   * @param message\n   * @param options\n   */\n  warning (message: string, options?: ZMessageOptions) {\n    const container = ZMessageClass.genWrapper()\n    const comp = new ZMessageSingle({\n      propsData: {\n        ...options,\n        message: message || '',\n        type: 'warning',\n        icon: 'mdi-alert-circle',\n      },\n      parent: container,\n    }).$mount()\n    container && container.$el.appendChild(comp.$el)\n  }\n\n  /**\n   * 错误消息\n   * @param message\n   * @param options\n   */\n  error (message: string, options?: ZMessageOptions) {\n    const container = ZMessageClass.genWrapper()\n    const comp = new ZMessageSingle({\n      propsData: {\n        ...options,\n        message: message || '',\n        type: 'error',\n        icon: 'mdi-close-circle',\n      },\n      parent: container,\n    }).$mount()\n    container && container.$el.appendChild(comp.$el)\n  }\n\n  getMessageList (): ZMessageItem[] {\n    let list = ZMessageClass.MESSAGE_LIST\n    if (!list) {\n      list = []\n      ZMessageClass.MESSAGE_LIST = list\n    }\n    return list\n  }\n\n  constructor () {\n    if (!instance) {\n      instance = this\n    }\n    return instance\n  }\n\n  static appId = 'app'\n\n  static genInstance (): ZMessageClass {\n    if (!instance) {\n      instance = new ZMessageClass()\n    }\n    return instance\n  }\n}\n\n/**\n * 全局通知实例:\n * 1. 可在vue组件内部使用 `this.$message` <br>\n * 2. 可引入使用 `import {ZMessage} = '@zwd/z-ui';`\n */\nexport const ZMessage = ZMessageClass.genInstance()\n"],"sourceRoot":"","file":"ZMessage.js"}