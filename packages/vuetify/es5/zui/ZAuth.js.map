{"version":3,"sources":["../../src/zui/ZAuth.ts"],"names":[],"mappings":";;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAEA,IAAI,QAAJ;;IAEa,U;;;;;AACX,wBAAA;AAAA;;AAAA;;AACE;;AACA,QAAI,CAAC,QAAL,EAAe;AACb,MAAA,QAAQ,gCAAR;AACD;;AACD,6CAAO,QAAP;AACD;;;;0BAEM,I,EAAmB;AACxB,UAAM,KAAK,GAAG,UAAU,CAAC,OAAX,CAAmB,KAAjC;AACA,aAAO,KAAK,GAAG,KAAK,CAAC,IAAD,CAAR,GAAiB,IAAI,OAAJ,CAAiB,UAAA,OAAO;AAAA,eAAI,OAAO,EAAX;AAAA,OAAxB,CAA7B;AACD;;;6BAEK;AACJ,UAAM,MAAM,GAAG,UAAU,CAAC,OAAX,CAAmB,MAAlC;AACA,aAAO,MAAM,GAAG,MAAM,EAAT,GAAc,IAAI,OAAJ,CAAiB,UAAA,OAAO;AAAA,eAAI,OAAO,EAAX;AAAA,OAAxB,CAA3B;AACD;;;gCAEY,I,EAAS;AACpB,UAAM,WAAW,GAAG,UAAU,CAAC,OAAX,CAAmB,WAAvC;AACA,aAAO,WAAW,GAAG,WAAW,CAAC,IAAD,CAAd,GAAuB,IAAzC;AACD;;;wCAEgB;AACf,UAAM,iBAAiB,GAAG,UAAU,CAAC,OAAX,CAAmB,iBAA7C;AACA,aAAO,iBAAiB,GAAG,iBAAiB,EAApB,GAAyB,IAAjD;AACD;;;qCAEiB,G,EAAW;AAC3B,UAAM,gBAAgB,GAAG,UAAU,CAAC,OAAX,CAAmB,gBAA5C;AACA,aAAO,gBAAgB,GAAG,gBAAgB,CAAC,GAAD,CAAnB,GAA2B,IAAlD;AACD;;;4BAEQ,O,EAAqB;AAC5B,MAAA,UAAU,CAAC,OAAX,GAAqB,OAArB;AACD;;;kCAIwB;AACvB,UAAI,CAAC,QAAL,EAAe;AACb,QAAA,QAAQ,GAAG,IAAI,UAAJ,EAAX;AACD;;AACD,aAAO,QAAP;AACD;;;;EA7C6B,iB","sourcesContent":["import { ZAuthDescription } from '../../types/zui/ZAuth'\nimport { ZAuthOptions, ZLoginOptions } from '../../types'\nimport { UIEvent } from './events/UIEvent'\n\nlet instance: ZAuthClass\n\nexport class ZAuthClass extends UIEvent implements ZAuthDescription {\n  constructor () {\n    super()\n    if (!instance) {\n      instance = this\n    }\n    return instance\n  }\n\n  login (data: ZLoginOptions): Promise<any> {\n    const login = ZAuthClass.options.login\n    return login ? login(data) : new Promise<any>(resolve => resolve())\n  }\n\n  logout (): Promise<any> {\n    const logout = ZAuthClass.options.logout\n    return logout ? logout() : new Promise<any>(resolve => resolve())\n  }\n\n  verifyLogin (data: any): boolean {\n    const verifyLogin = ZAuthClass.options.verifyLogin\n    return verifyLogin ? verifyLogin(data) : true\n  }\n\n  verifyLoginStatus (): boolean {\n    const verifyLoginStatus = ZAuthClass.options.verifyLoginStatus\n    return verifyLoginStatus ? verifyLoginStatus() : true\n  }\n\n  verifyPermission (key: string): boolean {\n    const verifyPermission = ZAuthClass.options.verifyPermission\n    return verifyPermission ? verifyPermission(key) : true\n  }\n\n  setting (options: ZAuthOptions) {\n    ZAuthClass.options = options\n  }\n\n  static options: ZAuthOptions\n\n  public static genInstance (): ZAuthClass {\n    if (!instance) {\n      instance = new ZAuthClass()\n    }\n    return instance\n  }\n}\n"],"sourceRoot":"","file":"ZAuth.js"}