{"version":3,"sources":["../../src/zui/ZModal.ts"],"names":[],"mappings":"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","sourcesContent":["import { ZModalDescription, ZModalOptions, ZModalResultOptions, ZModalShowOptions } from '../../types'\n\nimport { ZModalSingle } from './components/ZModal'\n\nlet instance: ZModalClass\n\n/**\n * 消息管理器\n */\nexport class ZModalClass implements ZModalDescription {\n  static MODAL_LIST: any[] = []\n\n  /**\n   * 显示消息\n   * @param options\n   */\n  show (options: ZModalShowOptions | string): ZModalResultOptions {\n    let propsData: ZModalOptions = {\n      message: '',\n    }\n    if (typeof options === 'string') {\n      propsData.message = options\n    }\n\n    if (typeof options === 'object') {\n      propsData = options as ZModalOptions\n      propsData.top = options.top ? options.top + '' : ''\n    }\n\n    const comp = new ZModalSingle({\n      propsData,\n    }).$mount()\n    const result = {\n      close () {\n        (comp as any).closeForceFun()\n        return result\n      },\n      then (handle: Function) {\n        (comp as any).setSureBeforeFun(handle)\n        return result\n      },\n      catch (handle: Function) {\n        (comp as any).setCancelBeforeFun(handle)\n        return result\n      },\n    }\n    return result\n  }\n\n  /**\n   * 常规消息\n   * @param message\n   * @param options\n   */\n  info (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'info',\n      icon: 'mdi-information',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 成功消息\n   * @param message\n   * @param options\n   */\n  success (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'success',\n      icon: 'mdi-check-circle',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 告警消息\n   * @param message\n   * @param options\n   */\n  warn (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.warning(message, options)\n  }\n\n  /**\n   * 告警消息\n   * @param message\n   * @param options\n   */\n  warning (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'warning',\n      icon: 'mdi-alert-circle',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 错误消息\n   * @param message\n   * @param options\n   */\n  error (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'error',\n      icon: 'mdi-close-circle',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 系统提示\n   * @param message\n   * @param options\n   */\n  system (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      title: options ? options.title : '提示',\n      message: message || '',\n      type: 'system',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 确认\n   * @param message\n   * @param options\n   */\n  confirm (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'confirm',\n      // icon: 'mdi-help-circle-outline',\n    })\n  }\n\n  /**\n   * 关闭所有\n   */\n  closeAll () {\n    // 关闭所以弹窗;\n  }\n\n  getModalList (): any[] {\n    let list = ZModalClass.MODAL_LIST\n    if (!list) {\n      list = []\n      ZModalClass.MODAL_LIST = list\n    }\n    return list\n  }\n\n  constructor () {\n    if (!instance) {\n      instance = this\n    }\n    return instance\n  }\n\n  static genInstance (): ZModalClass {\n    if (!instance) {\n      instance = new ZModalClass()\n    }\n    return instance\n  }\n}\n\n/**\n * 全局通知实例:\n * 1. 可在vue组件内部使用 `this.$modal` <br>\n * 2. 可引入使用 `import {ZModal} = '@zwd/z-ui';`\n */\nexport const ZModal = ZModalClass.genInstance()\n"],"sourceRoot":"","file":"ZModal.js"}