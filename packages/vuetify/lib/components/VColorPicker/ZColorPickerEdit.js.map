{"version":3,"sources":["../../../src/components/VColorPicker/ZColorPickerEdit.ts"],"names":[],"mappings":"AACA,OAAO,MAAP,MAAmB,mBAAnB;AACA,OAAO,gBAAP,MAA6B,oBAA7B;AAEA,OAAO,MAAM,gBAAgB,GAAG,MAAM,CAAC,gBAAD,CAAN,CAAyB,MAAzB,CAAgC;AAC9D,EAAA,IAAI,EAAE,qBADwD;AAE9D,EAAA,OAAO,EAAE;AACP,IAAA,QAAQ,CAAE,MAAF,EAAkB,KAAlB,EAA8B,KAA9B,EAA0C,EAA1C,EAAiD;AACvD,UAAI,EAAJ,EAAQ;AACN,cAAM,IAAI,GAAG,IAAb;AACA,cAAM,KAAK,GAAG,EAAE,CAAC,KAAjB;;AACA,QAAA,EAAE,CAAC,KAAH,GAAY,CAAD,IAAa;AACtB,UAAA,KAAK,IAAI,KAAK,CAAC,CAAD,CAAd;AACA,UAAA,YAAY,CAAC,IAAI,CAAC,UAAN,CAAZ;AACA,UAAA,IAAI,CAAC,UAAL,GAAkB,UAAU,CAAC,MAAK;AAChC,YAAA,IAAI,CAAC,WAAL,CAAiB,CAAjB;AACD,WAF2B,EAEzB,GAFyB,CAA5B;AAGD,SAND;AAOD;;AACD,aAAO,gBAAgB,CAAC,OAAjB,CAAyB,OAAzB,CAAiC,QAAjC,CAA0C,IAA1C,CAA+C,IAA/C,EAAqD,MAArD,EAA6D,KAA7D,EAAoE,KAApE,EAA2E,EAA3E,CAAP;AACD,KAdM;;AAeP,IAAA,WAAW,CAAE,CAAF,EAAU;AACnB,YAAM,MAAM,GAAG,CAAC,CAAC,MAAjB;;AACA,UAAI,MAAJ,EAAY;AACV;AACA;AACA,cAAM,WAAW,GAAG,MAAM,CAAC,kBAA3B;AACA,cAAM,IAAI,GAAG,WAAW,GAAG,WAAW,CAAC,SAAf,GAA2B,EAAnD;AACA,aAAK,KAAL,CAAW,cAAX,EAA2B,IAA3B;AACA,aAAK,KAAL,CAAW,cAAX,EAA2B,OAA3B;AACD;AACF;;AAzBM;AAFqD,CAAhC,CAAzB;AA+BP,eAAe,gBAAf","sourcesContent":["import { VNode } from 'vue'\nimport mixins from '../../util/mixins'\nimport VColorPickerEdit from './VColorPickerEdit'\n\nexport const ZColorPickerEdit = mixins(VColorPickerEdit).extend({\n  name: 'z-color-picker-edit',\n  methods: {\n    genInput (target: string, attrs: any, value: any, on: any): VNode {\n      if (on) {\n        const that = this as any\n        const input = on.input as Function\n        on.input = (e: Event) => {\n          input && input(e)\n          clearTimeout(that.inputTimer)\n          that.inputTimer = setTimeout(() => {\n            that.updateInput(e)\n          }, 100)\n        }\n      }\n      return VColorPickerEdit.options.methods.genInput.call(this, target, attrs, value, on)\n    },\n    updateInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      if (target) {\n        // const last = target.dataset['last'];\n        // target.dataset['last'] = target.value;\n        const nextElement = target.nextElementSibling as HTMLSpanElement\n        const flag = nextElement ? nextElement.innerText : ''\n        this.$emit('action:input', flag)\n        this.$emit('update:after', 'input')\n      }\n    },\n  },\n})\n\nexport default ZColorPickerEdit\n"],"sourceRoot":"","file":"ZColorPickerEdit.js"}