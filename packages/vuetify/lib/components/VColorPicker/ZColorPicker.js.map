{"version":3,"sources":["../../../src/components/VColorPicker/ZColorPicker.ts"],"names":[],"mappings":"AACA,OAAO,MAAP,MAAmB,mBAAnB;AACA,OAAO,YAAP,MAAyB,gBAAzB;AAEA,OAAO,kBAAP,MAA+B,sBAA/B;AACA,OAAO,mBAAP,MAAgC,uBAAhC;AACA,OAAO,gBAAP,MAA6B,oBAA7B;AAEA;;;;;;;;;AAQA,OAAO,MAAM,YAAY,GAAG,MAAM,CAAC,YAAD,CAAN,CAAqB,MAArB,CAA4B;AACtD,EAAA,IAAI,EAAE,gBADgD;AAEtD,EAAA,OAAO,EAAE;AACP,IAAA,SAAS,GAAA;AACP,YAAM,IAAI,GAAQ,IAAlB;AACA,aAAO,KAAK,cAAL,CAAoB,kBAApB,EAAwC;AAC7C,QAAA,KAAK,EAAE;AACL,UAAA,KAAK,EAAE,IAAI,CAAC,aADP;AAEL,UAAA,QAAQ,EAAE,IAAI,CAAC,QAFV;AAGL,UAAA,OAAO,EAAE,IAAI,CAAC,OAHT;AAIL,UAAA,KAAK,EAAE,IAAI,CAAC,KAJP;AAKL,UAAA,MAAM,EAAE,IAAI,CAAC;AALR,SADsC;AAQ7C,QAAA,EAAE,EAAE;AACF,0BAAgB,IAAI,CAAC,WADnB;AAEF,0BAAgB,IAAI,CAAC,WAFnB;AAGF,2BAAiB,IAAI,CAAC;AAHpB;AARyC,OAAxC,CAAP;AAcD,KAjBM;;AAmBP,IAAA,UAAU,GAAA;AACR,YAAM,IAAI,GAAQ,IAAlB;AACA,aAAO,KAAK,cAAL,CAAoB,mBAApB,EAAyC;AAC9C,QAAA,KAAK,EAAE;AACL,UAAA,KAAK,EAAE,IAAI,CAAC,aADP;AAEL,UAAA,QAAQ,EAAE,IAAI,CAAC,QAFV;AAGL,UAAA,SAAS,EAAE,IAAI,CAAC;AAHX,SADuC;AAM9C,QAAA,EAAE,EAAE;AACF,0BAAgB,IAAI,CAAC,WADnB;AAEF,0BAAgB,IAAI,CAAC,WAFnB;AAGF,wBAAc,IAAI,CAAC,SAHjB;AAIF,2BAAiB,IAAI,CAAC;AAJpB;AAN0C,OAAzC,CAAP;AAaD,KAlCM;;AAoCP,IAAA,OAAO,GAAA;AACL,YAAM,IAAI,GAAQ,IAAlB;AACA,aAAO,KAAK,cAAL,CAAoB,gBAApB,EAAsC;AAC3C,QAAA,KAAK,EAAE;AACL,UAAA,KAAK,EAAE,IAAI,CAAC,aADP;AAEL,UAAA,QAAQ,EAAE,IAAI,CAAC,QAFV;AAGL,UAAA,SAAS,EAAE,IAAI,CAAC,SAHX;AAIL,UAAA,cAAc,EAAE,IAAI,CAAC,cAJhB;AAKL,UAAA,IAAI,EAAE,IAAI,CAAC;AALN,SADoC;AAQ3C,QAAA,EAAE,EAAE;AACF,0BAAgB,IAAI,CAAC,WADnB;AAEF,yBAAgB,CAAD,IAAY,KAAK,KAAL,CAAW,aAAX,EAA0B,CAA1B,CAFzB;AAGF,0BAAgB,IAAI,CAAC,WAHnB;AAIF,0BAAgB,IAAI,CAAC;AAJnB;AARuC,OAAtC,CAAP;AAeD,KArDM;;AAuDP,IAAA,WAAW,CAAE,IAAF,EAAc;AACvB,WAAK,KAAL,CAAW,cAAX,EAA2B,IAA3B;AACD,KAzDM;;AA2DP,IAAA,YAAY,CAAE,IAAF,EAAc;AACxB,WAAK,KAAL,CAAW,eAAX,EAA4B,IAA5B;AACD,KA7DM;;AA+DP,IAAA,SAAS,GAAA;AACP,WAAK,KAAL,CAAW,YAAX;AACD,KAjEM;;AAmEP,IAAA,YAAY,CAAE,IAAF,EAAc;AACxB,WAAK,KAAL,CAAW,eAAX,EAA4B,IAA5B;AACD,KArEM;;AAuEP,IAAA,WAAW,CAAE,IAAF,EAAc;AACvB,WAAK,KAAL,CAAW,cAAX,EAA2B,IAA3B;AACD;;AAzEM;AAF6C,CAA5B,CAArB;AA+EP,eAAe,YAAf","sourcesContent":["import { VNode } from 'vue'\nimport mixins from '../../util/mixins'\nimport VColorPicker from './VColorPicker'\n\nimport ZColorPickerCanvas from './ZColorPickerCanvas'\nimport ZColorPickerPreview from './ZColorPickerPreview'\nimport ZColorPickerEdit from './ZColorPickerEdit'\n\n/**\n * 扩展颜色选择器组件\n * 1. 增加 update:after 事件，减少颜色更新频率，在鼠标按下并移动时改变颜色只会在结束时触发\n * 2. 增加 action:canvas 事件，操作调色板时触发，点击调色板或者在调色板上滑动\n * 3. 增加 action:dot 事件，点击选中颜色圆点是触发\n * 3. 增加 action:slider 事件，操作滑动条时触发，点击滑动条或拖动滑动条\n * 4. 增加 action:input 事件，操作输入框时触发\n */\nexport const ZColorPicker = mixins(VColorPicker).extend({\n  name: 'z-color-picker',\n  methods: {\n    genCanvas (): VNode {\n      const that: any = this as any\n      return this.$createElement(ZColorPickerCanvas, {\n        props: {\n          color: that.internalValue,\n          disabled: that.disabled,\n          dotSize: that.dotSize,\n          width: that.width,\n          height: that.canvasHeight,\n        },\n        on: {\n          'update:color': that.updateColor,\n          'update:after': that.updateAfter,\n          'action:canvas': that.actionCanvas,\n        },\n      })\n    },\n\n    genPreview (): VNode {\n      const that: any = this as any\n      return this.$createElement(ZColorPickerPreview, {\n        props: {\n          color: that.internalValue,\n          disabled: that.disabled,\n          hideAlpha: that.hideAlpha,\n        },\n        on: {\n          'update:color': that.updateColor,\n          'update:after': that.updateAfter,\n          'action:dot': that.actionDot,\n          'action:slider': that.actionSlider,\n        },\n      })\n    },\n\n    genEdit (): VNode {\n      const that: any = this as any\n      return this.$createElement(ZColorPickerEdit, {\n        props: {\n          color: that.internalValue,\n          disabled: that.disabled,\n          hideAlpha: that.hideAlpha,\n          hideModeSwitch: that.hideModeSwitch,\n          mode: that.mode,\n        },\n        on: {\n          'update:color': that.updateColor,\n          'update:mode': (v: any) => this.$emit('update:mode', v),\n          'update:after': that.updateAfter,\n          'action:input': that.actionInput,\n        },\n      })\n    },\n\n    updateAfter (type: string) {\n      this.$emit('update:after', type)\n    },\n\n    actionCanvas (type: string) {\n      this.$emit('action:canvas', type)\n    },\n\n    actionDot () {\n      this.$emit('action:dot')\n    },\n\n    actionSlider (type: string) {\n      this.$emit('action:slider', type)\n    },\n\n    actionInput (type: string) {\n      this.$emit('action:input', type)\n    },\n  },\n})\n\nexport default ZColorPicker\n"],"sourceRoot":"","file":"ZColorPicker.js"}