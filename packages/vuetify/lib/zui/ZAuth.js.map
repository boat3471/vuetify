{"version":3,"sources":["../../src/zui/ZAuth.ts"],"names":[],"mappings":"AAEA,SAAS,OAAT,QAAwB,kBAAxB;AAEA,IAAI,QAAJ;AAEA,OAAM,MAAO,UAAP,SAA0B,OAA1B,CAAiC;AACrC,EAAA,WAAA,GAAA;AACE;;AACA,QAAI,CAAC,QAAL,EAAe;AACb,MAAA,QAAQ,GAAG,IAAX;AACD;;AACD,WAAO,QAAP;AACD;;AAED,EAAA,KAAK,CAAE,IAAF,EAAqB;AACxB,UAAM,KAAK,GAAG,UAAU,CAAC,OAAX,CAAmB,KAAjC;AACA,WAAO,KAAK,GAAG,KAAK,CAAC,IAAD,CAAR,GAAiB,IAAI,OAAJ,CAAiB,OAAO,IAAI,OAAO,EAAnC,CAA7B;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,UAAM,MAAM,GAAG,UAAU,CAAC,OAAX,CAAmB,MAAlC;AACA,WAAO,MAAM,GAAG,MAAM,EAAT,GAAc,IAAI,OAAJ,CAAiB,OAAO,IAAI,OAAO,EAAnC,CAA3B;AACD;;AAED,EAAA,WAAW,CAAE,IAAF,EAAW;AACpB,UAAM,WAAW,GAAG,UAAU,CAAC,OAAX,CAAmB,WAAvC;AACA,WAAO,WAAW,GAAG,WAAW,CAAC,IAAD,CAAd,GAAuB,IAAzC;AACD;;AAED,EAAA,iBAAiB,GAAA;AACf,UAAM,iBAAiB,GAAG,UAAU,CAAC,OAAX,CAAmB,iBAA7C;AACA,WAAO,iBAAiB,GAAG,iBAAiB,EAApB,GAAyB,IAAjD;AACD;;AAED,EAAA,gBAAgB,CAAE,GAAF,EAAa;AAC3B,UAAM,gBAAgB,GAAG,UAAU,CAAC,OAAX,CAAmB,gBAA5C;AACA,WAAO,gBAAgB,GAAG,gBAAgB,CAAC,GAAD,CAAnB,GAA2B,IAAlD;AACD;;AAED,EAAA,OAAO,CAAE,OAAF,EAAuB;AAC5B,IAAA,UAAU,CAAC,OAAX,GAAqB,OAArB;AACD;;AAIM,SAAO,WAAP,GAAkB;AACvB,QAAI,CAAC,QAAL,EAAe;AACb,MAAA,QAAQ,GAAG,IAAI,UAAJ,EAAX;AACD;;AACD,WAAO,QAAP;AACD;;AA7CoC","sourcesContent":["import { ZAuthDescription } from '../../types/zui/ZAuth'\nimport { ZAuthOptions, ZLoginOptions } from '../../types'\nimport { UIEvent } from './events/UIEvent'\n\nlet instance: ZAuthClass\n\nexport class ZAuthClass extends UIEvent implements ZAuthDescription {\n  constructor () {\n    super()\n    if (!instance) {\n      instance = this\n    }\n    return instance\n  }\n\n  login (data: ZLoginOptions): Promise<any> {\n    const login = ZAuthClass.options.login\n    return login ? login(data) : new Promise<any>(resolve => resolve())\n  }\n\n  logout (): Promise<any> {\n    const logout = ZAuthClass.options.logout\n    return logout ? logout() : new Promise<any>(resolve => resolve())\n  }\n\n  verifyLogin (data: any): boolean {\n    const verifyLogin = ZAuthClass.options.verifyLogin\n    return verifyLogin ? verifyLogin(data) : true\n  }\n\n  verifyLoginStatus (): boolean {\n    const verifyLoginStatus = ZAuthClass.options.verifyLoginStatus\n    return verifyLoginStatus ? verifyLoginStatus() : true\n  }\n\n  verifyPermission (key: string): boolean {\n    const verifyPermission = ZAuthClass.options.verifyPermission\n    return verifyPermission ? verifyPermission(key) : true\n  }\n\n  setting (options: ZAuthOptions) {\n    ZAuthClass.options = options\n  }\n\n  static options: ZAuthOptions\n\n  public static genInstance (): ZAuthClass {\n    if (!instance) {\n      instance = new ZAuthClass()\n    }\n    return instance\n  }\n}\n"],"sourceRoot":"","file":"ZAuth.js"}