{"version":3,"sources":["../../../../src/zui/components/ZDateTimePicker/helper.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @param {String|Date|Number} dateTime\n * @param type\n * @return YYYY-MM-DD HH:mm:ss\n */\nexport function dateTimeFormat (dateTime: string | Date | number, type: 'date' | 'time' | '' = ''): any {\n  let dateObj = dateTime\n  if (typeof dateTime === 'number' || typeof dateTime === 'string') {\n    dateObj = new Date(dateTime)\n    if (dateObj + '' === 'Invalid Date') {\n      dateObj = new Date()\n    }\n  }\n  if (dateObj) {\n    dateObj = dateObj as Date\n    const year = dateObj.getFullYear()\n    const month = (dateObj.getMonth() + 1 + '').padStart(2, '0')\n    const date = (dateObj.getDate() + '').padStart(2, '0')\n    const hours = (dateObj.getHours() + '').padStart(2, '0')\n    const minutes = (dateObj.getMinutes() + '').padStart(2, '0')\n    const seconds = (dateObj.getSeconds() + '').padStart(2, '0')\n    if (type === 'date') {\n      return `${year}-${month}-${date}`\n    }\n    if (type === 'time') {\n      return `${hours}:${minutes}:${seconds}`\n    }\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`\n  }\n  return ''\n}\n\nexport function dateTimeFormatDate (dateTime: string | Date | number): any {\n  let dateObj = dateTime\n  if (typeof dateTime === 'number' || typeof dateTime === 'string') {\n    dateObj = new Date(dateTime)\n    if (dateObj + '' === 'Invalid Date') {\n      dateObj = new Date()\n    }\n  }\n  if (dateObj) {\n    dateObj = dateObj as Date\n    if (dateObj.setMilliseconds) {\n      dateObj.setMilliseconds(0)\n    }\n  }\n  return dateObj || null\n}\n\nexport function compareTime (time1: string, time2: string): number {\n  const t1 = +(new Date(`1970-01-01 ${time1}`))\n  const t2 = +(new Date(`1970-01-01 ${time2}`))\n  if (t1 > t2) {\n    return 1\n  }\n  if (t1 < t2) {\n    return -1\n  }\n  return 0\n}\n\nexport function compareDate (date1: string, date2: string): number {\n  const d1 = +(new Date(date1))\n  const d2 = +(new Date(date2))\n  if (d1 > d2) {\n    return 1\n  }\n  if (d1 < d2) {\n    return -1\n  }\n  return 0\n}\n"],"sourceRoot":"","file":"helper.js"}