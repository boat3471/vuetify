{"version":3,"sources":["../../../../src/zui/components/ZColorSelectorRect/ZColorSelectorRect.ts"],"names":[],"mappings":"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","sourcesContent":["import { VNode, VNodeData } from 'vue'\nimport mixins from '../../../util/mixins'\nimport { ColorInfo, ZColorSelectorMixin } from '../../mixins/ZColorSelectorMixin'\nimport { ZColorSelector, ZMenu, ZCard } from '../../../components'\n\nexport default mixins(ZColorSelectorMixin).extend({\n  name: 'z-color-selector-rect',\n  props: {\n    height: {\n      type: [Number, String],\n      default: 20,\n    },\n    width: {\n      type: [Number, String],\n      default: 20,\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    contentClass: {\n      type: String,\n      default: '',\n    },\n    transparent: {\n      type: Boolean,\n      default: true,\n    },\n    none: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: Boolean,\n  },\n\n  data () {\n    return {\n      colorData: {},\n      colorHex: '',\n      colorName: '',\n    }\n  },\n  computed: {\n    w () {\n      const w = this.width as number\n      return isNaN(w) ? w : `${w}px`\n    },\n    h () {\n      const h = this.height as number\n      return isNaN(h) ? h : `${h}px`\n    },\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler (value) {\n        const info = this.getColorByName(value)\n\n        switch (value) {\n          case 'transparent':\n            this.colorHex = 'transparent'\n            this.colorName = 'transparent'\n            break\n          case '':\n          case 'none':\n            this.colorHex = ''\n            this.colorName = 'none'\n            break\n          default:\n            this.colorHex = info.color || ''\n            this.colorName = info.name\n        }\n      },\n    },\n  },\n  methods: {\n    onColorReady (info: ColorInfo) {\n      this.colorHex = info.color === 'none' ? '' : (info.color || '')\n      this.colorName = info.name\n    },\n    onColorChange (info: ColorInfo) {\n      this.colorHex = info.color === 'none' ? '' : (info.color || '')\n      this.colorName = info.name\n      this.$emit('change', info)\n    },\n    genColorSelector (): VNode {\n      const data: VNodeData = {\n        props: {\n          value: this.colorHex,\n          defaultValue: this.colorHex,\n          transparent: this.transparent,\n          none: this.none,\n        },\n        on: {\n          ready: this.onColorReady,\n          change: this.onColorChange,\n        },\n      }\n      const colorSelector = this.$createElement(ZColorSelector, data, [])\n      return this.$createElement(ZCard, {\n        props: {\n          flat: true,\n        },\n      }, [colorSelector])\n    },\n    genActivatorSlot (props: VNodeData) {\n      const bg = this.colorName === 'transparent' ? 'transparent-bg' : ''\n      const data: VNodeData = {\n        staticClass: `d-flex align-center justify-center ${bg}`,\n        props: {\n          outlined: true,\n          flat: true,\n          class: this.contentClass,\n        },\n        style: {\n          cursor: 'pointer',\n          width: this.w,\n          height: this.h,\n          backgroundColor: this.colorHex,\n        },\n        ...props,\n      }\n      const icons = []\n      if (this.colorName === 'none' || this.colorName === '') {\n        icons.push(this.$createElement('z-icon', { props: { size: '16'} },'mdi-cancel'))\n      }\n      return this.$createElement(ZCard, data, icons)\n    },\n  },\n\n  render (h): VNode {\n    return h(ZMenu, {\n      staticClass: 'z-color-selector-rect--card',\n      class: {},\n      props: {\n        closeOnContentClick: this.closeOnContentClick === true,\n        eager: true,\n        offsetY: true,\n      },\n      scopedSlots: {\n        activator: this.genActivatorSlot,\n      },\n    }, [\n      this.genColorSelector(),\n    ])\n  },\n})\n"],"sourceRoot":"","file":"ZColorSelectorRect.js"}