{"version":3,"sources":["../../../../src/zui/components/ZColorSelectorTextField/ZColorSelectorTextField.ts"],"names":[],"mappings":"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","sourcesContent":["import { VNode } from 'vue'\nimport mixins from '../../../util/mixins'\nimport { ColorInfo, ZColorSelectorMixin } from '../../mixins/ZColorSelectorMixin'\nimport { ZColorSelectorRect, ZTextField } from '../../../components'\n\nexport default mixins(ZColorSelectorMixin).extend({\n  name: 'z-color-selector-text-filed',\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n    defaultValue: {\n      type: String,\n      default: '',\n    },\n    position: {\n      type: String,\n      default: 'append-outer',\n    },\n    inputWidth: {\n      type: String || Number,\n      default: '140px',\n    },\n    transparent: {\n      type: Boolean,\n      default: true,\n    },\n    none: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: Boolean,\n  },\n\n  data () {\n    return {\n      colorData: {},\n      inputValue: this.value,\n      rectColor: this.value,\n    }\n  },\n  computed: {},\n  watch: {\n    value: {\n      immediate: true,\n      handler (value) {\n        const theme = this.findThemeByName(value)\n        if (theme) {\n          this.inputValue = theme.name\n          this.rectColor = theme.color || ''\n        } else {\n          this.inputValue = value\n          this.rectColor = value\n        }\n      },\n    },\n  },\n  methods: {\n    checkColor (val: string) {\n      val = val.trim()\n      if (!val) {\n        return true\n      }\n      const theme = this.findThemeByName(val)\n      if (theme) {\n        return true\n      }\n      const info = this.getColorInfo(val)\n      if (info.valid) {\n        return true\n      }\n      return '无效的颜色'\n    },\n    onColorChange (info: ColorInfo) {\n      this.inputValue = info.name === 'none' ? '' : info.name\n      this.rectColor = info.color\n      this.$emit('change', {\n        name: info.name,\n        color: info.color,\n        isTheme: (info as any).isTheme || false,\n      })\n    },\n    onInputValue (val: string) {\n      this.inputValue = val\n      this.emitChange(val)\n    },\n    onInputChange (event: KeyboardEvent | FocusEvent) {\n      if ((event as KeyboardEvent).key === 'Enter' || (event as FocusEvent).type === 'blur') {\n        this.emitChange(this.inputValue)\n      }\n    },\n    emitChange (val: string) {\n      val = val.trim()\n      if (val === '' || val === 'none') {\n        this.rectColor = ''\n        this.$emit('change', {\n          name: 'none',\n          color: '',\n          isTheme: false,\n        })\n        return\n      }\n      if (val) {\n        const theme = this.findThemeByName(val)\n        if (theme) {\n          this.rectColor = theme.color || ''\n          this.$emit('change', {\n            name: theme.name,\n            color: theme.color,\n            isTheme: true,\n          })\n        } else {\n          const info = this.getColorInfo(val)\n          if (info && info.valid) {\n            this.rectColor = info.value === 'transparent' ? 'transparent' : (info.hex || '')\n            this.$emit('change', {\n              name: val,\n              color: info.hex,\n              isTheme: false,\n            })\n          }\n        }\n      }\n    },\n    genPrependSlot () {\n      return this.$createElement(ZColorSelectorRect, {\n        slot: this.position || 'append-outer',\n        props: {\n          width: '22',\n          height: '22',\n          value: this.rectColor,\n          defaultValue: this.defaultValue,\n          transparent: this.transparent,\n          none: this.none,\n          closeOnContentClick: this.closeOnContentClick,\n        },\n        on: {\n          change: this.onColorChange,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h(ZTextField, {\n      staticClass: 'z-color-selector-rect--card',\n      attrs: {\n        ...this.$attrs,\n      },\n      props: {\n        value: this.inputValue,\n        outlined: true,\n        hideDetails: true,\n        xs: true,\n        width: this.inputWidth,\n        rules: [this.checkColor],\n      },\n      style: {\n        width: this.inputWidth || '140px',\n      },\n      on: {\n        blur: this.onInputChange,\n        keydown: this.onInputChange,\n        input: this.onInputValue,\n      },\n    }, [this.genPrependSlot()])\n  },\n})\n"],"sourceRoot":"","file":"ZColorSelectorTextField.js"}