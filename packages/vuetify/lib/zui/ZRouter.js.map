{"version":3,"sources":["../../src/zui/ZRouter.ts"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAuC,YAAvC;AAIA,SAAS,kBAAT,QAAmC,wBAAnC;AAEA,IAAI,QAAJ;AAEA,OAAM,MAAO,YAAP,CAAmB;AAmDvB,EAAA,WAAA,GAAA;AACE,QAAI,CAAC,QAAL,EAAe;AACb,MAAA,QAAQ,GAAG,IAAX;AACD;;AACD,WAAO,QAAP;AACD;;AAvDD,MAAI,aAAJ,GAAiB;AACf,WAAO,YAAY,CAAC,MAApB;AACD;;AAED,MAAI,gBAAJ,GAAoB;AAClB,WAAO,YAAY,CAAC,MAAb,CAAoB,YAApB,CAAiC,IAAxC;AACD;;AAED,EAAA,SAAS,GAAA;AACP,WAAO,YAAY,CAAC,MAApB;AACD;;AAED,EAAA,gBAAgB,CAAE,KAAA,GAAuB,EAAzB,EAA2B;AACzC,UAAM,MAAM,GAAG,KAAK,aAApB;;AACA,QAAI,MAAJ,EAAY;AACV,YAAM,OAAO,GAAG,YAAY,CAAC,OAAb,IAAwB,EAAxC;AACA,MAAA,YAAY,CAAC,KAAb,GAAqB,KAAK,GAAG,KAAK,IAAI,EAAtC;AAEA,YAAM,MAAM,GAAkB,kBAAkB,CAAC,OAAD,EAAU,KAAV,CAAhD;AACA,YAAM,aAAa,GAAkB,OAAO,CAAC,OAAR,IAAmB,MAAM,CAAC,MAAP,CAAc,IAAd,CAAxD;AACA,MAAA,aAAa,CAAC,MAAd,GAAuB,MAAvB;AAEA,YAAM,SAAS,GAAG,IAAI,SAAJ,CAAc,aAAd,CAAlB;AAEC,MAAA,MAAc,CAAC,OAAf,GAA0B,SAAiB,CAAC,OAA5C,CAVS,CAYV;;AACA,YAAM,KAAK,GAAG,MAAM,CAAC,YAArB;AACA,MAAA,MAAM,CAAC,OAAP,CAAe;AAAE,QAAA,IAAI,EAAE,KAAK,CAAC,IAAd;AAAoB,QAAA,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,KAAX;AAAkB,UAAA,CAAC,EAAE,IAAI,CAAC,GAAL,KAAa;AAAlC;AAA3B,OAAf,EAAoF,IAApF;AACA,MAAA,MAAM,CAAC,OAAP,CAAe;AAAE,QAAA,IAAI,EAAE,KAAK,CAAC,IAAd;AAAoB,QAAA,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC;AAAX;AAA3B,OAAf,EAAgE,IAAhE;AACD;AACF;AAED;;;;;;AAIA,EAAA,OAAO,CAAE,OAAF,EAA2B,KAA3B,EAA+C;AACpD,IAAA,YAAY,CAAC,OAAb,GAAuB,OAAO,GAAG,OAAO,IAAI,EAA5C;AACA,IAAA,YAAY,CAAC,KAAb,GAAqB,KAAK,GAAG,KAAK,IAAI,EAAtC;AAEA,UAAM,MAAM,GAAkB,kBAAkB,CAAC,OAAD,EAAU,KAAV,CAAhD;AACA,UAAM,aAAa,GAAkB,OAAO,CAAC,OAAR,IAAmB,MAAM,CAAC,MAAP,CAAc,IAAd,CAAxD;AACA,IAAA,aAAa,CAAC,MAAd,GAAuB,MAAvB;AAEA,UAAM,MAAM,GAAG,IAAI,SAAJ,CAAc,aAAd,CAAf;AACA,IAAA,YAAY,CAAC,MAAb,GAAsB,MAAtB;AACA,WAAO,MAAP;AACD;;AAaD,SAAO,WAAP,GAAkB;AAChB,QAAI,CAAC,QAAL,EAAe;AACb,MAAA,QAAQ,GAAG,IAAI,YAAJ,EAAX;AACD;;AACD,WAAO,QAAP;AACD;;AAnEsB;AAsEzB,OAAO,MAAM,OAAO,GAAG,YAAY,CAAC,WAAb,EAAhB","sourcesContent":["import VueRouter, { RouteConfig } from 'vue-router'\nimport { RouterOptions } from 'vue-router/types/router'\nimport { ZMenuOption, ZRouterOptions } from '../../types'\nimport { ZRouterDescription } from '../../types/zui/ZRouter'\nimport { genRoutesByOptions } from './util/generatorRouter'\n\nlet instance: ZRouterClass\n\nexport class ZRouterClass implements ZRouterDescription {\n  get currentRouter (): VueRouter {\n    return ZRouterClass.router\n  }\n\n  get currentRoutePath (): string {\n    return ZRouterClass.router.currentRoute.path\n  }\n\n  getRouter (): VueRouter {\n    return ZRouterClass.router\n  }\n\n  addRoutesByMenus (menus: ZMenuOption[] = []) {\n    const router = this.currentRouter\n    if (router) {\n      const options = ZRouterClass.options || {}\n      ZRouterClass.menus = menus = menus || []\n\n      const routes: RouteConfig[] = genRoutesByOptions(options, menus)\n      const routerOptions: RouterOptions = options.options || Object.create(null)\n      routerOptions.routes = routes\n\n      const newRouter = new VueRouter(routerOptions);\n\n      (router as any).matcher = (newRouter as any).matcher\n\n      // 强制刷新当前路由\n      const route = router.currentRoute\n      router.replace({ path: route.path, query: { ...route.query, t: Date.now() + '' } }).then()\n      router.replace({ path: route.path, query: { ...route.query } }).then()\n    }\n  }\n\n  /**\n   * 设置路由器\n   * @internal\n   */\n  setting (options: ZRouterOptions, menus: ZMenuOption[]): VueRouter {\n    ZRouterClass.options = options = options || {}\n    ZRouterClass.menus = menus = menus || []\n\n    const routes: RouteConfig[] = genRoutesByOptions(options, menus)\n    const routerOptions: RouterOptions = options.options || Object.create(null)\n    routerOptions.routes = routes\n\n    const router = new VueRouter(routerOptions)\n    ZRouterClass.router = router\n    return router\n  }\n\n  constructor () {\n    if (!instance) {\n      instance = this\n    }\n    return instance\n  }\n\n  static menus?: ZMenuOption[]\n  static options?: ZRouterOptions\n  static router: VueRouter\n\n  static genInstance (): ZRouterClass {\n    if (!instance) {\n      instance = new ZRouterClass()\n    }\n    return instance\n  }\n}\n\nexport const ZRouter = ZRouterClass.genInstance()\n"],"sourceRoot":"","file":"ZRouter.js"}