{"version":3,"sources":["../../src/zui/ZModal.ts"],"names":[],"mappings":"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","sourcesContent":["import { ZModalDescription, ZModalOptions, ZModalResultOptions, ZModalShowOptions } from '../../types'\n\nimport { ZModalSingle } from './components/ZModal'\n\nlet instance: ZModalClass\n\n/**\n * 消息管理器\n */\nexport class ZModalClass implements ZModalDescription {\n  static MODAL_LIST: any[] = []\n\n  /**\n   * 显示消息\n   * @param options\n   */\n  show (options: ZModalShowOptions | string): ZModalResultOptions {\n    let propsData: ZModalOptions = {\n      message: '',\n    }\n    if (typeof options === 'string') {\n      propsData.message = options\n    }\n\n    if (typeof options === 'object') {\n      propsData = options as ZModalOptions\n      propsData.top = options.top ? options.top + '' : ''\n    }\n\n    const comp = new ZModalSingle({\n      propsData,\n    }).$mount()\n    const result = {\n      close () {\n        (comp as any).closeForceFun()\n        return result\n      },\n      then (handle: Function) {\n        (comp as any).setSureBeforeFun(handle)\n        return result\n      },\n      catch (handle: Function) {\n        (comp as any).setCancelBeforeFun(handle)\n        return result\n      },\n    }\n    return result\n  }\n\n  /**\n   * 常规消息\n   * @param message\n   * @param options\n   */\n  info (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'info',\n      icon: 'mdi-information',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 成功消息\n   * @param message\n   * @param options\n   */\n  success (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'success',\n      icon: 'mdi-check-circle',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 告警消息\n   * @param message\n   * @param options\n   */\n  warn (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.warning(message, options)\n  }\n\n  /**\n   * 告警消息\n   * @param message\n   * @param options\n   */\n  warning (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'warning',\n      icon: 'mdi-alert-circle',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 错误消息\n   * @param message\n   * @param options\n   */\n  error (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'error',\n      icon: 'mdi-close-circle',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 系统提示\n   * @param message\n   * @param options\n   */\n  system (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      title: options ? options.title : '提示',\n      message: message || '',\n      type: 'system',\n      labelSure: options ? options.labelSure : '知道了',\n      showCancel: false,\n    })\n  }\n\n  /**\n   * 确认\n   * @param message\n   * @param options\n   */\n  confirm (message: string, options?: ZModalOptions): ZModalResultOptions {\n    return this.show({\n      ...options,\n      message: message || '',\n      type: 'confirm',\n      // icon: 'mdi-help-circle-outline',\n    })\n  }\n\n  /**\n   * 关闭所有\n   */\n  closeAll () {\n    // 关闭所以弹窗;\n  }\n\n  getModalList (): any[] {\n    let list = ZModalClass.MODAL_LIST\n    if (!list) {\n      list = []\n      ZModalClass.MODAL_LIST = list\n    }\n    return list\n  }\n\n  constructor () {\n    if (!instance) {\n      instance = this\n    }\n    return instance\n  }\n\n  static genInstance (): ZModalClass {\n    if (!instance) {\n      instance = new ZModalClass()\n    }\n    return instance\n  }\n}\n\n/**\n * 全局通知实例:\n * 1. 可在vue组件内部使用 `this.$modal` <br>\n * 2. 可引入使用 `import {ZModal} = '@zwd/z-ui';`\n */\nexport const ZModal = ZModalClass.genInstance()\n"],"sourceRoot":"","file":"ZModal.js"}